import * as React from "react";
import { GridProps, SwitchFieldProps, TextFieldProps } from "@aws-amplify/ui-react";
export declare type EscapeHatchProps = {
    [elementHierarchy: string]: Record<string, unknown>;
} | null;
export declare type VariantValues = {
    [key: string]: string;
};
export declare type Variant = {
    variantValues: VariantValues;
    overrides: EscapeHatchProps;
};
export declare type ValidationResponse = {
    hasError: boolean;
    errorMessage?: string;
};
export declare type ValidationFunction<T> = (value: T, validationResponse: ValidationResponse) => ValidationResponse | Promise<ValidationResponse>;
export declare type OrderCreateFormInputValues = {
    email?: string;
    phone?: string;
    cashappId?: string;
    name?: string;
    company?: string;
    line1?: string;
    line2?: string;
    city?: string;
    state?: string;
    zip?: string;
    country?: string;
    total?: number;
    paid?: boolean;
    orderHash?: string;
    shipped?: boolean;
    shippingType?: string;
    shippingCost?: number;
    shipporateObjectId?: string;
    cartTotalWeight?: number;
    labelURL?: string;
    completed?: string;
    tracking?: string;
    trackingURL?: string;
    paymentType?: string;
    owner?: string;
};
export declare type OrderCreateFormValidationValues = {
    email?: ValidationFunction<string>;
    phone?: ValidationFunction<string>;
    cashappId?: ValidationFunction<string>;
    name?: ValidationFunction<string>;
    company?: ValidationFunction<string>;
    line1?: ValidationFunction<string>;
    line2?: ValidationFunction<string>;
    city?: ValidationFunction<string>;
    state?: ValidationFunction<string>;
    zip?: ValidationFunction<string>;
    country?: ValidationFunction<string>;
    total?: ValidationFunction<number>;
    paid?: ValidationFunction<boolean>;
    orderHash?: ValidationFunction<string>;
    shipped?: ValidationFunction<boolean>;
    shippingType?: ValidationFunction<string>;
    shippingCost?: ValidationFunction<number>;
    shipporateObjectId?: ValidationFunction<string>;
    cartTotalWeight?: ValidationFunction<number>;
    labelURL?: ValidationFunction<string>;
    completed?: ValidationFunction<string>;
    tracking?: ValidationFunction<string>;
    trackingURL?: ValidationFunction<string>;
    paymentType?: ValidationFunction<string>;
    owner?: ValidationFunction<string>;
};
export declare type PrimitiveOverrideProps<T> = Partial<T> & React.DOMAttributes<HTMLDivElement>;
export declare type OrderCreateFormOverridesProps = {
    OrderCreateFormGrid?: PrimitiveOverrideProps<GridProps>;
    email?: PrimitiveOverrideProps<TextFieldProps>;
    phone?: PrimitiveOverrideProps<TextFieldProps>;
    cashappId?: PrimitiveOverrideProps<TextFieldProps>;
    name?: PrimitiveOverrideProps<TextFieldProps>;
    company?: PrimitiveOverrideProps<TextFieldProps>;
    line1?: PrimitiveOverrideProps<TextFieldProps>;
    line2?: PrimitiveOverrideProps<TextFieldProps>;
    city?: PrimitiveOverrideProps<TextFieldProps>;
    state?: PrimitiveOverrideProps<TextFieldProps>;
    zip?: PrimitiveOverrideProps<TextFieldProps>;
    country?: PrimitiveOverrideProps<TextFieldProps>;
    total?: PrimitiveOverrideProps<TextFieldProps>;
    paid?: PrimitiveOverrideProps<SwitchFieldProps>;
    orderHash?: PrimitiveOverrideProps<TextFieldProps>;
    shipped?: PrimitiveOverrideProps<SwitchFieldProps>;
    shippingType?: PrimitiveOverrideProps<TextFieldProps>;
    shippingCost?: PrimitiveOverrideProps<TextFieldProps>;
    shipporateObjectId?: PrimitiveOverrideProps<TextFieldProps>;
    cartTotalWeight?: PrimitiveOverrideProps<TextFieldProps>;
    labelURL?: PrimitiveOverrideProps<TextFieldProps>;
    completed?: PrimitiveOverrideProps<TextFieldProps>;
    tracking?: PrimitiveOverrideProps<TextFieldProps>;
    trackingURL?: PrimitiveOverrideProps<TextFieldProps>;
    paymentType?: PrimitiveOverrideProps<TextFieldProps>;
    owner?: PrimitiveOverrideProps<TextFieldProps>;
} & EscapeHatchProps;
export declare type OrderCreateFormProps = React.PropsWithChildren<{
    overrides?: OrderCreateFormOverridesProps | undefined | null;
} & {
    clearOnSuccess?: boolean;
    onSubmit?: (fields: OrderCreateFormInputValues) => OrderCreateFormInputValues;
    onSuccess?: (fields: OrderCreateFormInputValues) => void;
    onError?: (fields: OrderCreateFormInputValues, errorMessage: string) => void;
    onChange?: (fields: OrderCreateFormInputValues) => OrderCreateFormInputValues;
    onValidate?: OrderCreateFormValidationValues;
} & React.CSSProperties>;
export default function OrderCreateForm(props: OrderCreateFormProps): React.ReactElement;
